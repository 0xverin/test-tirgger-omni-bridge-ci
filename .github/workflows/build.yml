name: Build

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**/dependabot.yml"
      - "**/README.md"
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  repository_dispatch:
    types:
      - heima-update
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  DOCKER_BUILDKIT: 1
  # the branch or tag on which this workflow is triggered
  # `head_ref` will only be set if the triggering event is `pull_request`
  REF_VERSION: ${{ github.head_ref || github.ref_name }}

concurrency:
  # see https://stackoverflow.com/questions/74117321/if-condition-in-concurrency-in-gha
  # along with the `sequentialise` job below, it guarantees:
  # - for push in dev: all triggered CIs will be run sequentially, none is cancelled
  # - for PR: later triggered CIs will cancel previous runs, maximum one CI will be run
  group: ${{ github.workflow }}-${{ github.head_ref && github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-check:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Print trigger information
        run: |
          echo "Workflow triggered by: ${{ github.event_name }}"
          echo "Trigger time: $(date)"
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            echo "Event type: ${{ github.event.action }}"
            echo "Triggered by Heima update"
            echo "Sender: ${{ github.event.sender.login }}"
            echo "Client payload:"
            echo '${{ toJSON(github.event.client_payload) }}'
          fi

      - name: Install foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Install toolchain
        run: rustup show

      - name: Test
        run: |
          cd ethereum/chainbridge-contracts/ && forge build
          cd ../.. && cargo test  
          cargo clean

      - name: Build
        run: |
          make build-evm-contracts # we refer to Bridge.json in the code
          cd artifacts/ethereum/HEI-token
          npm i && npm run compile
          cd -
          make build-docker-dev


      - name: Setup permissions
        run: |
          sudo chmod -R a+rw ethereum/chainbridge-contracts 
          sudo chmod -R a+rw artifacts

      - name: Setup the network
        run: |
          docker compose -f docker/chains.yml -f docker/deployers.yml -f docker/explorer.yml -f docker/omni-bridge.yml up -d --remove-orphans
          sleep 30

      - name: Run e2e test
        run: |
          make start-local-e2e-test
      
      - name: Test repeated block scannning 
        run: | 
          make test-repeated-block-scanning


      - name: Collect docker logs if test fails
        continue-on-error: true
        uses: jwalton/gh-docker-logs@v2
        if: failure()
        with:
          tail: all
          dest: docker-logs

      - name: Upload docker logs if test fails
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: build-check-docker-logs
          path: docker-logs
          if-no-files-found: ignore
          retention-days: 3